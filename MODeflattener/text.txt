Dump of assembler code for function main():
   0x0000000000001189 <+0>:	endbr64 
   0x000000000000118d <+4>:	push   %rbp
   0x000000000000118e <+5>:	mov    %rsp,%rbp
   0x0000000000001191 <+8>:	sub    $0x20,%rsp
   0x0000000000001195 <+12>:	mov    %fs:0x28,%rax
   0x000000000000119e <+21>:	mov    %rax,-0x8(%rbp)
   0x00000000000011a2 <+25>:	xor    %eax,%eax
   0x00000000000011a4 <+27>:	lea    0xe59(%rip),%rdi        # 0x2004
   0x00000000000011ab <+34>:	mov    $0x0,%eax
   0x00000000000011b0 <+39>:	call   0x1080 <printf@plt>
   0x00000000000011b5 <+44>:	lea    -0x18(%rbp),%rax
   0x00000000000011b9 <+48>:	mov    %rax,%rsi
   0x00000000000011bc <+51>:	lea    0xe54(%rip),%rdi        # 0x2017
   0x00000000000011c3 <+58>:	mov    $0x0,%eax
   0x00000000000011c8 <+63>:	call   0x1090 <__isoc99_scanf@plt>
   0x00000000000011cd <+68>:	movl   $0x0,-0x14(%rbp)
   0x00000000000011d4 <+75>:	movl   $0x0,-0x10(%rbp)
   0x00000000000011db <+82>:	cmpl   $0xffffffff,-0x14(%rbp)
   0x00000000000011df <+86>:	je     0x1288 <main()+255>
   0x00000000000011e5 <+92>:	cmpl   $0x2,-0x14(%rbp)
   0x00000000000011e9 <+96>:	je     0x1259 <main()+208>
   0x00000000000011eb <+98>:	cmpl   $0x2,-0x14(%rbp)
   0x00000000000011ef <+102>:	jg     0x127b <main()+242>
   0x00000000000011f5 <+108>:	cmpl   $0x0,-0x14(%rbp)
   0x00000000000011f9 <+112>:	je     0x1203 <main()+122>
   0x00000000000011fb <+114>:	cmpl   $0x1,-0x14(%rbp)
   0x00000000000011ff <+118>:	je     0x1235 <main()+172>
   0x0000000000001201 <+120>:	jmp    0x127b <main()+242>
   0x0000000000001203 <+122>:	mov    -0x18(%rbp),%eax
   0x0000000000001206 <+125>:	test   %eax,%eax
   0x0000000000001208 <+127>:	jle    0x121b <main()+146>
   0x000000000000120a <+129>:	mov    -0x18(%rbp),%eax
   0x000000000000120d <+132>:	cmp    $0xa,%eax
   0x0000000000001210 <+135>:	jg     0x121b <main()+146>
   0x0000000000001212 <+137>:	movl   $0x1,-0x14(%rbp)
   0x0000000000001219 <+144>:	jmp    0x1283 <main()+250>
   0x000000000000121b <+146>:	mov    -0x18(%rbp),%eax
   0x000000000000121e <+149>:	cmp    $0xa,%eax
   0x0000000000001221 <+152>:	jle    0x122c <main()+163>
   0x0000000000001223 <+154>:	movl   $0x2,-0x14(%rbp)
   0x000000000000122a <+161>:	jmp    0x1283 <main()+250>
   0x000000000000122c <+163>:	movl   $0xffffffff,-0x14(%rbp)
   0x0000000000001233 <+170>:	jmp    0x1283 <main()+250>
   0x0000000000001235 <+172>:	movl   $0x0,-0xc(%rbp)
   0x000000000000123c <+179>:	mov    -0x18(%rbp),%eax
   0x000000000000123f <+182>:	cmp    %eax,-0xc(%rbp)
   0x0000000000001242 <+185>:	jge    0x1250 <main()+199>
   0x0000000000001244 <+187>:	mov    -0xc(%rbp),%eax
   0x0000000000001247 <+190>:	add    %eax,-0x10(%rbp)
   0x000000000000124a <+193>:	addl   $0x1,-0xc(%rbp)
   0x000000000000124e <+197>:	jmp    0x123c <main()+179>
   0x0000000000001250 <+199>:	movl   $0xffffffff,-0x14(%rbp)
   0x0000000000001257 <+206>:	jmp    0x1283 <main()+250>
   0x0000000000001259 <+208>:	mov    -0x18(%rbp),%eax
   0x000000000000125c <+211>:	cmp    $0xa,%eax
   0x000000000000125f <+214>:	jle    0x1272 <main()+233>
   0x0000000000001261 <+216>:	mov    -0x18(%rbp),%eax
   0x0000000000001264 <+219>:	add    %eax,-0x10(%rbp)
   0x0000000000001267 <+222>:	mov    -0x18(%rbp),%eax
   0x000000000000126a <+225>:	sub    $0x1,%eax
   0x000000000000126d <+228>:	mov    %eax,-0x18(%rbp)
   0x0000000000001270 <+231>:	jmp    0x1259 <main()+208>
   0x0000000000001272 <+233>:	movl   $0xffffffff,-0x14(%rbp)
   0x0000000000001279 <+240>:	jmp    0x1283 <main()+250>
   0x000000000000127b <+242>:	movl   $0xffffffff,-0x14(%rbp)
   0x0000000000001282 <+249>:	nop
   0x0000000000001283 <+250>:	jmp    0x11db <main()+82>
   0x0000000000001288 <+255>:	mov    -0x10(%rbp),%eax
   0x000000000000128b <+258>:	mov    %eax,%esi
   0x000000000000128d <+260>:	lea    0xd86(%rip),%rdi        # 0x201a
   0x0000000000001294 <+267>:	mov    $0x0,%eax
   0x0000000000001299 <+272>:	call   0x1080 <printf@plt>
   0x000000000000129e <+277>:	mov    $0x0,%eax
   0x00000000000012a3 <+282>:	mov    -0x8(%rbp),%rdx
   0x00000000000012a7 <+286>:	xor    %fs:0x28,%rdx
   0x00000000000012b0 <+295>:	je     0x12b7 <main()+302>
   0x00000000000012b2 <+297>:	call   0x1070 <__stack_chk_fail@plt>
   0x00000000000012b7 <+302>:	leave  
   0x00000000000012b8 <+303>:	ret    
End of assembler dump.
